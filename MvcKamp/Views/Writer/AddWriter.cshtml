@model EntityLayer.Concrete.Writer 
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Yeni Yazar Ekle</h2>
<br />
@using (Html.BeginForm("AddWriter","Writer",FormMethod.Post))
{
<div class="form-group">
    @Html.Label("Yazar Adi");
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br /><br />
    @Html.Label("Yazar Soyadi");
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)
    <br /><br />
    @Html.Label("Yazar Unvani");
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    <br /><br />
    @Html.Label("Yazar Mail");
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br /><br />
    @Html.Label("Yazar Sifre");
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br /><br />
    @Html.Label("Yazar Hakkinda");
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br /><br />
    @Html.Label("Yazar Görsel Linki");
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br /><br />
    <button class="btn btn-success">KAYDET</button>
</div>

}

